{
  "compilerOptions": {
    // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "allowJs": true,
    "target": "es6",
    "strictNullChecks": true,
    "forceConsistentCasingInFileNames": true, // 不允许对同一个文件使用不一致格式的引用
    "declaration": true, // 生成相应的.d.ts文件
    "noUnusedLocals": true, // 报告未使用的本地变量的错误
    "noUnusedParameters": true, // 报告未使用参数的错误
    "incremental": true, // 通过从以前的编译中读取/写入信息到磁盘上的文件来启用增量编译
    "jsx": "react",
    // Turning on noImplicitAny however TypeScript will issue an error whenever it would have inferred any:
    "noImplicitAny": true,
    "noImplicitThis": true,
    // When enabled, TypeScript will check all code paths in a function to ensure they return a value.
    "noImplicitReturns": true,
    // 不删除枚举声明 https://www.typescriptlang.org/tsconfig#preserveConstEnums
    "preserveConstEnums": true,
    // Strips all comments from TypeScript files when converting into JavaScript.
    "removeComments": true,
    // Node.js’ CommonJS implementation
    "moduleResolution": "node",
    // 允许使用 .json 扩展名导入的模块
    "resolveJsonModule": true,
    "baseUrl": ".",
    "rootDir": ".",
    "outDir": "./dist/",
    "paths": {
      "@/*": [
        "./src/*"
      ],
      "@/package": ["./package.json"],
      "@/config": ["./config/index.js"],
    }
  },
  "exclude": [
    "__tests__",
    "node_modules",
    "dist",
    "tests",
    "jest",
    "lib",
    "**/*.test.ts",
    "**/*.spec.ts"
  ],
  "compileOnSave": false
}
